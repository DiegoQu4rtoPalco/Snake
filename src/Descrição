Commit inicial: Projeto criando jogo famoso da cobrinha !

Commit 3 - Janela Básica. 
Criando a classe Main configurando colocando seu tamanho, visualização etc..
criando a classe GamePanel extendendo ao JPanel, cirando variável static final int WHIDTH 
HEIGHT com suas medidas, adicionado ao construtor sendo instanciado na classe Main e adicionando
ao frame.

Commit 4 - Matriz em linhas da janela
Adicionado métodos na classe GamePanel, start, stop, tickt e paint(Graphics g) a dentro do 
método paint vamos dar condição de laço for percorrer a váriavel i se for igual a zero; se i for 
menor que WIDHT dividio por 10; i++, desenharemos a linha g.drawLine i multiplicado por 10, zero, 
i multiplicado por dez, HEIGHT; criando um outro laço for percorrendo a váriavel i se for igual 
a zero; se i for menor que HEIGHT dividio por 10; i++; g.drawLine, 0, i multiplicado por 10, HEIGHT,
i multiplicado por 10; execute o programa observe a o Matriz criada. 

Commit 5 - Configurando Thread e criando nova classe BodyPart.
Criando o objeto private Thread thread, private boolean running, método start running recebe true,
instanciando o obejto thread = new Thread(this); thread.start(); chamando o método start no construtor
start(); 
No método stop, runnning recebe false, adicione thread.join(); aceite exceção try e catch.
No método run, adicione a condição while, se (running), chame os métodos tick e repaint.
Crie uma nova classe BodyPart com seu construtor, mais métodos tick e draw(Graphics g), adicione novas 
variáveis private int xCoor, yCoor, whidth, height; ao construtor adicione aos paramentros int xCoor,
yCoor, int tileSize, a dentro do contrutor this.xCoor é igual xCoor, this.yCoor é igual a yCoor, agora
as variaveis whidth e height é igual tileSize.
No método draw vamos desenhar setando a cor amarela e o fillRect(quadrado), recebendo xCoor multiplicado
por width, yCoor multiplicado por height, width, height e edicione os métodos getter e setters xCoor e 
yCoor.

Commit 6 - Criando o ArrayList e sua conf, mais Snake aparecendo na janela.
Chame a classe BodyPart na classe GamePanel private BodyPart b; adicionar o objeto á um ArrayList
private ArrayList<BodyPart> snake; crie duas varivais private int xCool igual a dez, yCoor igual dez,
size igual a cinco.
Instancie ao construtor o snake = new ArrayList<BodyPart>();
Agora iremos pintar, no método paint usando laço for na variavel int i igual a zero; i menos snake.size();
i++; snake na variavel i, draw (g);
No método tick, condição se snake.size for igual a zero, objeto b é igual instancia de BodyPart com parametros
xCoor, yCoor, 10, snake.add(b); após chave tiks++; criar variavel ticks igual a zero.
Criar variaveis private boolean right = true, left = false, up = false, down = false;
Ainda no método tick, condição se ticks for maior que vinte cinco mil, if(right) xCoor++; if(left) xCoor--;
if(up) yCoor--;if(down) yCoor++; ticks recebe zero, objeto b igual instancia BodyPart(xCoor, yCoor, 10);
snake.add(b); proxima condição se snake.size > size, snake.remove(0);
Para limpar a tela adicione ao métor paint g.clearRect(0, 0, WIDHT, WHEIGHT);

Commit 7 - Movimento do Snake
Implementar KeyListener e adicionar seus métodos em seguida, parametros KeyEvent passa a ser a letra e
no método KeyPressed, criar variavel int key = e.getKeyCode(); condição se key for igual a KeyEvent.VK_RIGHT
&& !left, right recebe true, up false, down false, 
copie a mesma condição mude apenas 
VK_LEFT && !RIGHT, left true, up false, down false; 
outra condição 
VK_UP && !down, up true, right false, left false;
outra condição
VK_DOWN && !up, down true, right false, left false
No construtor adicione setFocusable(true) mais addKeyListener(this). 

Commit 8 - Snake aumentando de tamanho, apple nascendo e sendo removida.
Criando nova classe Apple com as mesmas configurações da classe BodyPart, chame na classe GamePanel private Apple
apple, depois chame o obejto para um ArrayList com o nome de apples, crie um Random r, instancie o ArrayList apples
e Random r no construtor.
No método paint usar laço for para percorrer a variavel i, int i recebe zero; se i < apples.size(); i++; dentro das 
aspas objeto apples na variavel i, método draw no parametro g.
Condição no método tick, se quantidade de apples for igual a zero, xCoor = r.nextInt(49);
yCoor = r.nextInt(49); instancie a classe apple, depois apples.add(apple).
Para cada passada pela apple, snake aumenta de tamanho, usando o laço for na váriavel i, i igual a zero,
i menor que quantidade de apples, i mais mais, condição se xCoor igual apples na variavel i, getxCoor &&
yCoor igual apples na variavel i, getyCoor, dentro das aspas size++, apples.remove(i), i++
